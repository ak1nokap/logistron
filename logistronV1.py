import asyncio
import random
from telethon import TelegramClient

# ‚ö° –î–∞–Ω–Ω—ã–µ API (–ø–æ–ª—É—á–∏—Ç—å –Ω–∞ https://my.telegram.org)
api_id = 23506845
api_hash = "a015ff48c31ca309a5ef6543f8fe65dd"

# –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç
client = TelegramClient("session_name", api_id, api_hash)
symbols ='–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ'


random_hash = "".join(random.choice(symbols) for _ in range(8))


async def main():
    # –ß–∏—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞
    with open("message.txt", "r", encoding="utf-8") as f:
        message_text = f.read().strip()
        final_text =random_hash+"\n"+message_text

    # –ß–∏—Ç–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø –∏–∑ —Ñ–∞–π–ª–∞
    with open("groups.txt", "r", encoding="utf-8") as f:
        groups = [line.strip() for line in f if line.strip()]

    print(f"üì¢ –ù–∞–π–¥–µ–Ω–æ {len(groups)} –≥—Ä—É–ø–ø –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")
    failed_groups = []
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ –≤—Å–µ –≥—Ä—É–ø–ø—ã
    for idx, group in enumerate(groups, start=1):
        try:
            await client.send_message(group, final_text)
            print(f"‚úÖ [{idx}/{len(groups)}] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {group}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {group}: {e}")

        # –†–∞–Ω–¥–æ–º–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ (3‚Äì7 —Å–µ–∫—É–Ω–¥)
        delay = random.randint(1, 3)
        print(f"‚è≥ –ñ–¥—ë–º {delay} —Å–µ–∫ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º...")
        await asyncio.sleep(delay)

        print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print(f"–£—Å–ø–µ—à–Ω–æ: {len(groups) - len(failed_groups)}")
        print(f"–û—à–∏–±–æ–∫: {len(failed_groups)}")

with client:
    client.loop.run_until_complete(main())
