import asyncio
import random
from telethon import TelegramClient

# ‚ö° –î–∞–Ω–Ω—ã–µ API (—Å —Å–∞–π—Ç–∞ https://my.telegram.org)
api_id = 23506845
api_hash = "a015ff48c31ca309a5ef6543f8fe65dd"

client = TelegramClient("session_name", api_id, api_hash)



async def main():

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    msg = await client.get_messages("me", limit=1)
    if not msg:
        print("‚ùå –í –ò–∑–±—Ä–∞–Ω–Ω–æ–º –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π!")
        return

    source_msg = msg[0]
    print(f"üÜî –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {source_msg.id}: {source_msg.text[:50]}...")

    # –ß–∏—Ç–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø –∏–∑ —Ñ–∞–π–ª–∞
    with open("groups.txt", "r", encoding="utf-8") as f:
        groups = [line.strip() for line in f if line.strip()]

    print(f"üì¢ –ù–∞–π–¥–µ–Ω–æ {len(groups)} –≥—Ä—É–ø–ø –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")
    failed_groups = []
    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    for idx, group in enumerate(groups, start=1):
        try:
            await client.forward_messages(group, source_msg.id, "me")
            print(f"‚úÖ [{idx}/{len(groups)}] –ü–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ {group}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {group}: {e}")
            failed_groups.append(group)

        #–†–∞–Ω–¥–æ–º–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ (3‚Äì8 —Å–µ–∫—É–Ω–¥)
        delay = random.randint(3, 8)
        print(f"‚è≥ –ñ–¥—ë–º {delay} —Å–µ–∫...")
        await asyncio.sleep(delay)

        print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print(f"–£—Å–ø–µ—à–Ω–æ: {len(groups) - len(failed_groups)}")
        print(f"–û—à–∏–±–æ–∫: {len(failed_groups)}")

with client:
    client.loop.run_until_complete(main())

